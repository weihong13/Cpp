#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;

/*
	map 和 unordered_map（哈希表） 的区别，一个有序,一个无序，

	map 的时间复杂度 log n（红黑树）
	un_map 是 最大程度的接近O(1) 在没有哈希冲突的情况下 （数组、搭配哈希函数）


	哈希函数：
		除留余数法 f(key) % m , m不大于表长，得到的余数就是存放的位置

	哈希函数特性：
		1、int f(key) 输入域无穷大、输出域有限个
		2、不同的输入，可能有相同的输出（哈希冲突）
		3、相同的输入，一定有相同的输出（没有随机成分，对方便查找、删除、修改）
		4、均匀分布，类似的输入，通过打乱，然后得到尽可能的均匀分布

	解决哈希冲突的方法（哈希碰撞）
		1、线性探测在散列（余数+1 寻找下一个未占用的位置，没找到接着+1）
		2、再哈希法（对相同的值，再次使用其他的哈希函数，到没有冲突为止）
		3、新建一块新的内容来存储发生冲突的数据
		上面都是有冲突就换一个地方存储
		下面的方法直接在原地解决问题
		4、链地址法，在每个桶内创建一个链表，对重复的键值对，存放在一个链表中（O（n）的复杂度）

			这就需要将桶的数据分布尽可能的均匀分布，每个链表中的数据越多，查找的效率就越低
			当链表中的数据到达一个阈值的时候，自动将链表转换为红黑树（O(log n)）
*/


