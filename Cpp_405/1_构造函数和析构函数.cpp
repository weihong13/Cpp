//#include<iostream>
//#include<string>
//
//using namespace std;

//
// 对象的初始化和清理
// 
// 构造函数和析构函数
// 这两个函数会被编译器自动调用，对象的初始化和清理是编译器强制我们要做的内容
// 如果不提供构造函数和析构函数，编译器会提供编译器，编译器提供的这两个函数是空实现的
// 
// 构造函数：在创建对象时进行初始化操作
// 类名 () {}
// 1、没有返回值，也不写void
// 2、函数名和类名相同
// 3、构造函数可以有参数、因此可以重载
// 4、程序在调用对象时会自动调用构造，无须手动调用
// 
// 析构函数：对象销毁前系统自动调用
// ~类名 () {}
// 1、没有返回值，也不写void
// 2、函数名和类名相同，但要在名称前加~
// 3、没有参数、不能重载
// 4、程序在对象销毁时会自动调用析构 ，无须手动调用
// 
// 
//

//// 构造函数和析构函数的实现
//class Person
//{
//public:
//	// 构造函数
//	Person() {
//		// 如果自己不实现，编译器就会调用自己提供的，是个空函数
//		cout << "Person构造函数的调用" << endl;
//	}
//	// 析构函数
//	~Person() {
//		cout << "Person析构函数的调用" << endl;
//	}
//};
//
//void test() {
//	// 该对象存放在栈区，函数调用结束后 p 会被销毁
//	Person p;
//}
//
//int main() {
//
//	// test();
//
//	Person p; // 程序结束前才会调用析构
//	system("pause");
//	return 0;
//}


// 


